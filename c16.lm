    processor 6502

; Kernal entries 

const GETIN   = $ffe4     ; getin rom kernel routine
const CLRSCN  = $d88b     ; clear screen
const GOHOME  = $d89a     ; go home
const PRNSTR  = $9088     ; print string in A/Y, 0 terminated
const PRNINT  = $8b40     ; print integer in A/X

; zero page

const cursor_ptr = 200
const CRSRCOL = 1339

; registers

; color costants

const color_black   = 0
const color_white   = 1
const color_red     = 2
const color_cyan    = 3
const color_magenta = 4
const color_green   = 5
const color_blue    = 6
const color_yellow  = 7

; screen costants

const SCREEN_COLS  = 40
const SCREEN_ROWS  = 25
const VIDEO_MEMORY = $0C00
const COLOR_MEMORY = $0800
const COLOR_PAGE_OFFSET = (($ffff + color_memory - VIDEO_MEMORY) / 256) + 1

; useful macros
    
    macro cls
       jsr CLRSCN
    end macro	 
    
    ; in commodore-16 the print string routine works differently 
    ; than VIC-20 / C64. The cursor_ptr needs to be initialized
    ; to start of line, then location 202 and 205 must be set
    ; with column and row.
    
    mac print
print_col   SET [[[{1}_pos]-VIDEO_MEMORY]%SCREEN_COLS]
print_row   SET [[[{1}_pos]-VIDEO_MEMORY]/SCREEN_COLS]    
print_vadrr SET [{1}_pos]-print_col        
       lda #[print_vadrr%256]
       sta cursor_ptr
       lda #[print_vadrr/256]       
       sta cursor_ptr+1 
       
       lda #print_col
       sta 202
       lda #print_row
       sta 205 
                                   
       lda #[{1}%256]
       ldy #[{1}/256]
       jsr my_print          
    endm 
       
    macro waitkey
        pha 
        txa : pha
        tya : pha
.lab1        
        jsr GETIN
        cmp #0
        beq .lab1
        pla : tay   
        pla : tax
        pla      
    end macro
