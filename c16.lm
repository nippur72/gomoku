    processor 6502

C16 = 1 ; compiler costant

; Kernal entries 

GETIN   = $ffe4     ; getin rom kernel routine
CLRSCN  = $d88b     ; clear screen
GOHOME  = $d89a     ; go home
PRNSTR  = $9088     ; print string in A/Y, 0 terminated
PRNINT  = $8b40     ; print integer in A/X

; zero page

cursor_ptr = 200
CRSRCOL = 1339

; registers

; color costants

color_black   = #0
color_white   = #1
color_red     = #2
color_cyan    = #3
color_magenta = #4
color_green   = #5
color_blue    = #6
color_yellow  = #7

; screen costants

screen_cols  = #40
screen_nrows = #25
video_memory = #$0C00
color_memory = #$0800
color_page_offset = (($ffff + color_memory - video_memory) / 256) + 1

; useful macros
    
    macro cls
       jsr CLRSCN
    end macro	 
    
    ; in commodore-16 the print string routine works differently 
    ; than VIC-20 / C64. The cursor_ptr needs to be initialized
    ; to start of line, then location 202 and 205 must be set
    ; with column and row.
    
    mac print
print_col   SET [[[{1}_pos]-video_memory]%screen_cols]
print_row   SET [[[{1}_pos]-video_memory]/screen_cols]    
print_vadrr SET [{1}_pos]-print_col        
       lda #[print_vadrr%256]
       sta cursor_ptr
       lda #[print_vadrr/256]       
       sta cursor_ptr+1 
       
       lda #print_col
       sta 202
       lda #print_row
       sta 205 
                                   
       lda #[{1}%256]
       ldy #[{1}/256]
       jsr my_print          
    endm 
       
    macro waitkey
        pha 
        txa : pha
        tya : pha
.lab1        
        jsr GETIN
        cmp #0
        beq .lab1
        pla : tay   
        pla : tax
        pla      
    end macro
